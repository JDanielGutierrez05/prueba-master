service: backend
frameworkVersion: ^3.38.0
configValidationMode: error

provider:
  name: aws
  stage: dev
  region: us-east-1
  stackName: ${self:custom.app}-${self:service}
  deploymentBucket:
    name: ${self:custom.s3.deploymentBucketName.${self:custom.stage}}
  memorySize: 128
  runtime: nodejs20.x
  timeout: 30
  # environment:
  #   DB_CONNECTION_DATA: ${self:custom.secretsManager.databaseConnection}
  versionFunctions: false
  logRetentionInDays: ${self:custom.lambda.logRetentionInDays.${self:custom.stage}}

package:
  patterns:
    - '!./**'
    - ../src/package.json
  individually: true

plugins:
  - serverless-deployment-bucket
  - '@serverless/safeguards-plugin'

resources:
  - ${file(iam.yml)}

functions:
  - ${file(functions.yml)}

custom:
  org: test2master
  app: test2
  stage: ${opt:stage, self:provider.stage}
  safeguards:
    - safeguard: allowed-runtimes
      config:
        - ${self:provider.runtime}
    - safeguard: framework-version
      enforcementLevel: warning
      config: ${self:frameworkVersion}
    - safeguard: allowed-regions
      enforcementLevel: error
      config:
        - ${self:provider.region}
    - safeguard: allowed-function-names
      enforcementLevel: warning
      config: ${self:custom.servicePrefix}-${FUNCTION}
    - safeguard: no-wild-iam-role-statements
  servicePrefix: ${self:custom.app}-${self:service}
  s3:
    deploymentBucketName:
      dev: ${self:provider.region}.${self:custom.org}.${self:custom.app}.${self:custom.stage}.deploys
  secretsManager:
    databaseConnection: /${self:custom.app}-infrastructure/AppCredentials
  lambda:
    logRetentionInDays:
      dev: 1
